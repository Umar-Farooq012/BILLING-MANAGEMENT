
SELECT
    DPD.PLOT_NO,
    DPB.CLIENT_REG_NO,DBS.PLOT_ID, DPD.CATEGORY,DBR.TARIFF_PER_UNIT,DBR.MAINTENANCE,DBR.WASA__CHARGES,
    DPD.PLOT_NO || ' - ' || DPB.CLIENT_REG_NO || ' ' || DBS.PLOT_ID  ||' MARLA CATEGORY-'||DPD.CATEGORY AS D,
    DPD.ID AS R
FROM
    DGMS_PLOT_DETAILS DPD
     JOIN DGMS_PLOTS_BOOKING DPB ON DPB.PLOT_ID = DPD.ID  AND DPB.BOOKING_STATUS = 'BOOKED'  AND DPB.ORG_ID = :P175_ORGANIZATION
    
    LEFT JOIN DGMS_BILLS_SETUP DBS ON DBS.PLOT_ID = DPB.PLOT_ID     --AND DBS.ORG_ID =:P175_ORGANIZATION
    LEFT JOIN DGMS_BILL_RATES DBR ON DBR.ID = DPD.ID
    AND DPD.ORG_ID =:P175_ORGANIZATION;
================================================================================
MASTER DETAIL PROCESS
declare

 V_ID NUMBER ;        
begin
 SELECT "DGMS_BILLS_DEATILS_SEQ".CURRVAL INTO V_ID from DUAL;

     case :APEX$ROW_STATUS

     when 'C' then 
         insert into DGMS_BILLS_SETUP (BILL_ID,  METER_REF_NO, PREV_READING,PLOT_ID, CURRENT_READING, UNIT_CONSUMED, BILL_PAYMENT )
                                values(V_ID, :METER_REF_NO, :PREV_READING,:PLOT_ID, :CURRENT_READING, :UNIT_CONSUMED, :BILL_PAYMENT  )
         returning ID into :ID;
     when 'U' then
         update DGMS_BILLS_SETUP SET 
         BILL_ID = :P175_ID,
          METER_REF_NO =  :METER_REF_NO, 
          PREV_READING = :PREV_READING,
         PLOT_ID  =  :PLOT_ID,
          CURRENT_READING =:CURRENT_READING,
          UNIT_CONSUMED = :UNIT_CONSUMED,
          BILL_PAYMENT = :BILL_PAYMENT
          
             where ID  = :ID;
     end case;
     --EXCEPTION WHEN OTHERS THEN NULL;
end;
===================================================================
saturday 16/3/2024


SELECT DISTINCT
    DPD.PLOT_NO,
    DPB.CLIENT_REG_NO,DBS.PLOT_ID, DPD.CATEGORY, ROUND(DPD.MARLA, 2) MARLA, DBR.LIVING_STATUS ,  DBR.TARIFF_PER_UNIT,DBR.MAINTENANCE,DBR.WASA__CHARGES,
    (DPD.PLOT_NO || ' - ' || DPB.CLIENT_REG_NO || ' ' || DBS.PLOT_ID  ||' - '||DBR.MARLA_CATEGORY || ' - ' || DBR.LIVING_STATUS|| ' - '|| DBR.TARIFF_PER_UNIT||' - '||DBR.MAINTENANCE||' - '||DBR.WASA__CHARGES) as D,
    DPD.ID AS R
FROM
    DGMS_PLOT_DETAILS DPD
     JOIN DGMS_PLOTS_BOOKING DPB ON DPB.PLOT_ID = DPD.ID  AND DPB.BOOKING_STATUS = 'BOOKED'  AND DPB.ORG_ID = :P175_ORGANIZATION AND NVL(DPD.PLOT_TYPE,'PLOT') = 'PLOT'
    
    LEFT JOIN DGMS_BILLS_SETUP DBS ON DBS.PLOT_ID = DPB.PLOT_ID   --AND DBS.ORG_ID =:P175_ORGANIZATION
    LEFT JOIN DGMS_BILL_RATES DBR ON DBR.MARLA_CATEGORY = DPD.CATEGORY	AND DBR.ACTIVE='Y'
    AND DPD.ORG_ID =:P175_ORGANIZATION ;
=================================
water tarif per unit against value query 
SELECT DISTINCT   DBR.TARIFF_PER_UNIT, DBR.LIVING_STATUS, DBR.MARLA_CATEGORY
FROM  DGMS_BILL_RATES DBR   
LEFT JOIN DGMS_BILLS_SETUP DBS ON DBS.LIVING_STATUS=DBR.LIVING_STATUS
WHERE DBS.METER_REF_NO = :METER_REF_NO AND
DBR.SITE_NAME=:P175_ORGANIZATION AND DBR.ACTIVE='Y'
--DBS.PREV_READING=:PREV_READING AND
 AND DBR.MARLA_CATEGORY=:P175_MARLA_CATEGORY AND
DBR.LIVING_STATUS=:NATURE
==============================================

grid lov against water tarif per unit 
SELECT DISTINCT   DBR.TARIFF_PER_UNIT, DBR.LIVING_STATUS, DBR.MARLA_CATEGORY
FROM  DGMS_BILL_RATES DBR   
LEFT JOIN DGMS_BILLS_SETUP DBS ON DBS.LIVING_STATUS=DBR.LIVING_STATUS
WHERE DBS.METER_REF_NO = :METER_REF_NO 
AND DBR.SITE_NAME=:P175_ORGANIZATION
 AND DBR.ACTIVE='Y'
--DBS.PREV_READING=:PREV_READING 
 AND DBR.MARLA_CATEGORY=:P175_MARLA_CATEGORY AND
DBR.LIVING_STATUS=:NATURE

===============================================================================================================================================================>
PREVIOUS RECORD FETCH IN FORM 

 SELECT DISTINCT DBD.PAYABLE_AFTER_DUE_DATE, DBD.BILL_SETUP_ID, DBD.DUE_DATE, DBD.BILL_MONTH, DBS.PLOT_ID  , DPD.PLOT_NO --, DBD.PAYABLE, DPD.PLOT_NO
  
  FROM DGMS_BILLS_DEATILS DBD
  LEFT JOIN DGMS_BILLS_SETUP DBS ON DBS.PLOT_ID = DBD.BILL_SETUP_ID
  LEFT JOIN DGMS_PLOT_DETAILS DPD ON DPD.ID=DBD.BILL_SETUP_ID
  WHERE DBD.STATUS = 'UNPAID'
  AND DBD.BILL_SETUP_ID = :P175_BILL_SETUP_ID
  and DBD.APPROVAL_STATUS NOT IN ('REJECTED') 
 AND DBD.BILL_MONTH < TO_CHAR(SYSDATE, 'MONTH')
  AND DBD.DUE_DATE < SYSDATE AND PAYABLE_AFTER_DUE_DATE IS NOT NULL ;
